name: Checker by WebHook

on: repository_dispatch

jobs:
  build:
    runs-on: ubuntu-18.04
#    timeout-minutes: 3600

    env:
      repo: ${{ github.event.client_payload.repo }}
      branch: ${{ github.event.client_payload.branch }}
      command: ${{ github.event.client_payload.command }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo -E swapoff /swapfile
        sudo -E rm -rf /swapfile
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17
        sudo -E apt-get update -y
        sudo -E apt-get full-upgrade -y
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-8 gcc++-8 gcc-8-multilib g++-8-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar re2c
        for i in $(ls /usr/bin/*-8); do sudo -E ln -sf $i ${i%%-8*}; done 
        sudo -E apt-get autoremove -y --purge
        sudo -E apt-get clean -y
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc
    - name: Clone Source
      run: |
        cd /home/runner
        git clone https://github.com/${repo} --branch ${branch} --single-branch openwrt
        sudo chown -R runner:runner openwrt
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
    - name: Run Remote Command
      run: |
        cd /home/runner/openwrt
        bash -c "${command}"
    - name: Start Build ${{ github.event.client_payload.repo }}@${{ github.event.client_payload.branch }}
      run: |
        cd /home/runner/openwrt
        make defconfig
        make -j$[$(nproc)+1]
    - name: Rebuild to Collect Error Log
      if: failure()
      run: |
        cd /home/runner/openwrt
        make -j1 V=s | tee build_log.log
    - name: Upload Building Error Log
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: build_log.log
        path: /home/runner/openwrt/build_log.log
